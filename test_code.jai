// test :: (a: int, 
// b: float, 
// c: (asd: int, 
// b: float, 
// c: u8) -> bool) -> int, 
// bool, 
// float
test :: ()
{
    if a == b || 1 == 2 ||
       (q != w && 
            a == b && (v + 12 == 0 || 
                 asd == qwe)) || 
       zxc >= 4
        {

        }

    while a + b + (c + d) > 0 {
        


        print("asd\n");
        print("asd\n");
        print("asd\n");
        print("asd\n");


    }

    if true
        print(asdasd);
    else
        print(zxczxczxc);

    if true {print(asdasd);
    }
    else {print(zxczxczxc);}

    x := 10;
    y := ifx x > 5 "x > 5" else "x < 5";
    if x > 5 print(asd); else print(zxc);
}@"asdasdasdasd asd asd" @"aaa\"\"aaa" 

get_process_result :: (process: *Process, timeout_ms := -1) -> success: bool, Process_Result {
     return true, .{type=.UNSTARTED};
 }
